/*
 * This file is part of RskJ
 * Copyright (C) 2017 RSK Labs Ltd.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

package co.rsk.net.messages;

import org.ethereum.core.Block;
import org.ethereum.core.BlockHeader;
import org.junit.Assert;
import org.junit.Test;
import org.spongycastle.util.encoders.Hex;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by ajlopez on 5/10/2016.
 */
public class BlockHeadersMessageTest {
    private static String rlp = "f902b4f902afa0abff92b32e43e9f34eda3fa7fe5359cb06871b172226a829daa9af22d1fac2cea01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347949efa02278cc63dc612c174976f11037d382f8b67a0c5d6ad68162cb8f04ef7afc8bf74558a19bceaf334b0497bd8d3c86c24de9f9da056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a0a8f57ab26ee2c88d15f6bd20f052dbc76a1f4a0b55d214a88f4b8201b8840736bfe000080845730e70e808080b85004000000f08613eff431f121c059541e38594a190d6b0e46d2cb2bb52dc6b692020000003b8cacca5ed46c229a777c7c55ddfefed2b78ccb4ce6df07ecb1e36bde29f4741ee73057ffff7f20005a40aca701000000013b8cacca5ed46c229a777c7c55ddfefed2b78ccb4ce6df07ecb1e36bde29f4740101b86100000000000000801f506f4152ccdb46a5e162488b24647e750c88073c56530d2154475fdc8c4cb4ac00000000000000002b6a524f4f5453544f434b3a1ff8eae11ecb36803b0fd23bd31490bd1054e078852a0f975428871c42bef40900000000800ac0c0";

    private static String[] rlps = {
            "f902eef902e9a0a7f5840621ef5e1526f9270d685849d91907ff9013144fc7ae3f2552f2c4a633a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347949efa02278cc63dc612c174976f11037d382f8b67a0c430cf78b938432f6b9f7f5890336a028b96804ce28a8442fa8ada47036707e7a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bf42408084577ebf9b808080b8507111010000000000000000000000000000000000000000000000000000000000000000007e4df5fafa21c8e98a5a53f71d2ca16494f990b6a27ab3573c8edc7aa52070d49bbf7e57ffff7f2100000000a701000000017e4df5fafa21c8e98a5a53f71d2ca16494f990b6a27ab3573c8edc7aa52070d40101b89f00000000000002c0a5a9535c64b5e9be40e51e473a79ea1f3ac2338ac8249fd20879ca7b4f53378555f8325ee386ba24e7605caa2f27ac9aabd46e2c7da06f144552534b424c4f434b3a6959cfd8eac4f6c651e31963dd6853fa654ef61295b643d4108ceec789759676ffffffff0100f2052a010000002321036633884234a4fde22cd40fefa18fc0c19632c85377d3b759cc77aa8a81650490ac00000000800ac0c0",
            "f90307f90302a0400f1201e775aa82b962b814d87f7b36118d47d4e0b1f0260adb5b7d8ec4dd72a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347949efa02278cc63dc612c174976f11037d382f8b67a0c430cf78b938432f6b9f7f5890336a028b96804ce28a8442fa8ada47036707e7a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bf42408084577ebf9b808080b850711101000000000000000000000000000000000000000000000000000000000000000000bbaf7dbca8a60e573724ae5412034f5d5b3ea52c404c497d0dbac4a9cdf2c390a0bf7e57ffff7f2105000000a70100000001bbaf7dbca8a60e573724ae5412034f5d5b3ea52c404c497d0dbac4a9cdf2c3900101b8b800000000000000006a09e667bb67ae853c6ef372a54ff53a510e527f9b05688c1f83d9ab5be0cd1901000000010000000000000000000000000000000000000000000000000000000000000000ffffffff3166a0b5cd2314c48852534b424c4f434b3a6cfbbbb6a96c8c7e3cabbea93159649878bb5a0dba79576ed428cc2d4c82aa36ffffffff0100f2052a01000000232103175237bdf80afc4eda6faac999e452345d58efd259a49cb3c93cef109a361c80ac00000000800ac0c0",
            "f902fcf902f7a0587ff0dbb398e968e1df8cbe5ec7ac4e6ff9c3364695bd30e91c17dde2337d16a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347949efa02278cc63dc612c174976f11037d382f8b67a0c430cf78b938432f6b9f7f5890336a028b96804ce28a8442fa8ada47036707e7a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bf42408084577ebfa1808080b85071110100000000000000000000000000000000000000000000000000000000000000000058ca7e4cd4a1e5f5e79b5d6519bf85a43a3eab67e8fac897a6a2e5ae81e6738aa6bf7e57ffff7f2101000000a7010000000158ca7e4cd4a1e5f5e79b5d6519bf85a43a3eab67e8fac897a6a2e5ae81e6738a0101b8ad00000000000000c06f3c6a01cd8fdbbceb054e9db0b6e1670c85c817c063856160ab47a9cf1200094e0c4554c93772e518a346b3cf9d7d0a7436ea760d9fa65d9ca2dad7c2c627f4e92d9be350c3aa52534b424c4f434b3ab37090a35a0c5e186a4762b476395495561445ccd057e4fea5ac524f496790bdffffffff0100f2052a0100000023210394d476fd2ad21bde602112060717583bbb1a5fa0724610ab962e012d12dd23cbac00000000800ac0c0",
            "f902daf902d5a0bda596363c374bb93c2aad0250fcb73f3b9c4ac3ed1e0567ec2c921ba6b28c2aa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347949efa02278cc63dc612c174976f11037d382f8b67a0c430cf78b938432f6b9f7f5890336a028b96804ce28a8442fa8ada47036707e7a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bf42408084577ebfa6808080b8507111010000000000000000000000000000000000000000000000000000000000000000009262cba20f53465e40396ac706c9b2928e721726b0444e178b18839d4a313c10abbf7e57ffff7f2102000000a701000000019262cba20f53465e40396ac706c9b2928e721726b0444e178b18839d4a313c100101b88b00000000000004007eec57f1cffddf3da889e8d69eecea1147538d26eda3fddd4361a43ccc4fd50a76499b2e4052534b424c4f434b3ad053a2cd9785c8f376fad84563e78e9504327c2ed2f6324134f05b1e662a61f7ffffffff0100f2052a01000000232102334cb0430969bc56431c826bae433d6f632e0ad6a4f33775f04cbfd704288297ac00000000800ac0c0",
            "f9030cf90307a04babc1fcde8c62b1664a5e1b1836fe2e17bc79fdca0cfbc1045943b4a30a35b4a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347949efa02278cc63dc612c174976f11037d382f8b67a0c430cf78b938432f6b9f7f5890336a028b96804ce28a8442fa8ada47036707e7a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bf42408084577ebfab808080b85071110100000000000000000000000000000000000000000000000000000000000000000011cda50ecc09db296d18bb9cebbc1dfd14e8c18e7057e33e49c8dc2b5c73fc5eb0bf7e57ffff7f2102000000a7010000000111cda50ecc09db296d18bb9cebbc1dfd14e8c18e7057e33e49c8dc2b5c73fc5e0101b8bd0000000000000040f267a0a98d830ae29670fde4aaef671f819f086e56f1cef18a1c195fc5dfdeac8d4e0af22c67effcd15a677ca1c9ccac21eb9bd499f0922803268ee7d6eeeeb1c3dfcbb377550bf41ae5ab2368d284403604fe956afaba52534b424c4f434b3a9dfa390098a1b4c8b55037fb14ff26284accd5805a96fe03389f5bd9dd9ee9c2ffffffff0100f2052a01000000232102593a0481d34f63b54b140e4494cd07953d945542e4207139c79eb01583cc8f38ac00000000800ac0c0"
    };

    @Test
    public void getMessageType() {
        BlockHeadersMessage message = new BlockHeadersMessage((byte[]) null);
        Assert.assertEquals(MessageType.BLOCK_HEADERS_MESSAGE, message.getMessageType());
    }

    @Test
    public void getBlockHeader() {
        Block block = new Block(Hex.decode(rlp));
        BlockHeadersMessage message = new BlockHeadersMessage(block.getHeader());
        Assert.assertSame(block.getHeader(), message.getBlockHeaders().get(0));
    }

    @Test
    public void getBlockHeaders() {
        List<BlockHeader> blocks = new ArrayList<>();
        for (String s : rlps) {
            Block b = new Block(Hex.decode(s));
            blocks.add(b.getHeader());
        }

        BlockHeadersMessage message = new BlockHeadersMessage(blocks);
        List<BlockHeader> mblocks = message.getBlockHeaders();

        Assert.assertEquals(mblocks.size(), blocks.size());

        for (int i = 0; i < blocks.size(); i++) {
            Assert.assertArrayEquals(blocks.get(1).getHash(), mblocks.get(1).getHash());
        }
    }
}
